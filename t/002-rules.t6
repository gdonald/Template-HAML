
use v6.d;
use lib 'lib';
use Template::Hosoi::Grammar;
use Test;

plan 36;

my $m;

$m = Grammar.parse('"one two three"', :rule<quoted-string>);
ok $m.Str eq '"one two three"';
$m = Grammar.parse("'one two three'", :rule<quoted-string>);
ok $m.Str eq "'one two three'";

$m = Grammar.parse('"one"', :rule<double-quoted-string>);
ok $m.Str eq '"one"';
$m = Grammar.parse('"one two"', :rule<double-quoted-string>);
ok $m.Str eq '"one two"';
$m = Grammar.parse('"one two three"', :rule<double-quoted-string>);
ok $m.Str eq '"one two three"';

$m = Grammar.parse("'one'", :rule<single-quoted-string>);
ok $m.Str eq "'one'";
$m = Grammar.parse("'one two'", :rule<single-quoted-string>);
ok $m.Str eq "'one two'";
$m = Grammar.parse("'one two three'", :rule<single-quoted-string>);
ok $m.Str eq "'one two three'";

$m = Grammar.parse('one', :rule<phrase>);
ok $m.Str eq 'one';
$m = Grammar.parse('one two', :rule<phrase>);
ok $m.Str eq 'one two';
$m = Grammar.parse('one two three', :rule<phrase>);
ok $m.Str eq 'one two three';

$m = Grammar.parse('%body', :rule<tag>);
ok $m.Str eq '%body';
ok $m<name> eq 'body';

$m = Grammar.parse('%p', :rule<tag>);
ok $m.Str eq '%p';
ok $m<name> eq 'p';

$m = Grammar.parse('class: "foo"', :rule<param>);
ok $m<key><name> eq 'class';
ok $m<quoted-string><double-quoted-string><phrase>.Str eq 'foo';

$m = Grammar.parse("class: 'foo'", :rule<param>);
ok $m<key><name> eq 'class';
ok $m<quoted-string><single-quoted-string><phrase>.Str eq 'foo';

$m = Grammar.parse("class: 'foo', id: 'foo_1'", :rule<params>);
ok $m<param>[0].Str eq "class: 'foo'";
ok $m<param>[1].Str eq "id: 'foo_1'";

$m = Grammar.parse('class: "foo", id: "foo_1"', :rule<params>);
ok $m<param>[0].Str eq 'class: "foo"';
ok $m<param>[1].Str eq 'id: "foo_1"';

$m = Grammar.parse('class: "foo", id: \'foo_1\'', :rule<params>);
ok $m<param>[0].Str eq 'class: "foo"';
ok $m<param>[1].Str eq "id: \'foo_1\'";

$m = Grammar.parse("class: \"foo\", id: 'foo_1'", :rule<params>);
ok $m<param>[0].Str eq 'class: "foo"';
ok $m<param>[1].Str eq "id: 'foo_1'";

$m = Grammar.parse('{ class: "foo", id: "foo_1" }', :rule<params-hash>);
ok $m<params><param>[0]<key><name>.Str eq 'class';
ok $m<params><param>[0]<quoted-string><double-quoted-string><phrase>.Str eq 'foo';
ok $m<params><param>[1]<key><name>.Str eq 'id';
ok $m<params><param>[1]<quoted-string><double-quoted-string><phrase>.Str eq 'foo_1';

$m = Grammar.parse('%p{ class: "foo", id: "foo_1" }', :rule<tag>);
ok $m<name>.Str eq 'p';
ok $m<params-hash><params><param>[0]<key><name>.Str eq 'class';
ok $m<params-hash><params><param>[0]<quoted-string><double-quoted-string><phrase>.Str eq 'foo';
ok $m<params-hash><params><param>[1]<key><name>.Str eq 'id';
ok $m<params-hash><params><param>[1]<quoted-string><double-quoted-string><phrase>.Str eq 'foo_1';
